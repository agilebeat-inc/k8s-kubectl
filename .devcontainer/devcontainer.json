{
    "name": "${localWorkspaceFolderBasename}",
    "dockerFile": "Dockerfile",
    //"workspaceFolder": "/Users/mdwulit/workspace/e-commerce/trail-bakery",
    // Use 'settings' to set *default* container specific settings.json values on container create. 

    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.profile.linux": {
                    "bash": {
                        "path": "/bin/bash"
                    }
                },
                "terminal.integrated.defaultProfile.linux": "bash",
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.gopath": "/home/vscode/go"
            },

            // Add the IDs of extensions you want installed when the container is created in the array below.
            "extensions": [
                "dbaeumer.vscode-eslint",
                "ms-vscode-remote.vscode-remote-extensionpack",
                "ms-vscode-remote.remote-containers",
                "humao.rest-client",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-toolsai.jupyter",
                "ms-ossdata.vscode-postgresql",
                "golang.go",
                "ms-kubernetes-tools.vscode-kubernetes-tools"
            ]
        }
    },
    
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [3001, 3306, 8983, 9001],

    // Specifies a command that should be run after the container has been created.
    // "postCreateCommand": "chown 1000 /var/run/docker.sock && mkdir -p .docker",
        
    // Comment out the next line to run as root instead.
    // "remoteUser": "node",
    "mounts": [
        "source=${localEnv:HOME}/.aws/credentials,target=/home/vscode/.aws/credentials,type=bind",
        "source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind",
        "source=${localEnv:HOME}/.kube,target=/home/vscode/.kube,type=bind",
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
    "workspaceMount": "source=${localWorkspaceFolder},target=${localWorkspaceFolder},type=bind,consistency=delegated ",
    "workspaceFolder": "${localWorkspaceFolder}",
    "remoteUser": "1000",
    "postStartCommand": "sudo chown $(id -u).$(id -u) /var/run/docker.sock",
    "runArgs": [
        "--network=host"
    ]
}
